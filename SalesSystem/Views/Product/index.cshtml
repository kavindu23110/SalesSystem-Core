
@{
    ViewBag.Title = "index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model SalesSystem.Models.ProductViewModel
<link href="~/Content/Custom.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<div class="container">
    <div class="row registration-pulldown"></div>
    <div class="row">
        <div class=" col-sm-3"></div>
        <div class="col-lg-6 RegistrationDiv">
            <h1 class="header-custom text-center ">Add Product</h1>
            @using (Html.BeginForm("AddNewProduct", "Product", FormMethod.Post))
            {
                <div class="form-group">

                    <div class="form-group row">

                        <label class="col-md-4 col-form-label">Supplier Name</label><div class="col-md-8">
                            @Html.DropDownListFor(p => p.SupplierName, new SelectList(Model.lstSupplierName), new { @class = "custom-select form-control" })

                        </div>
                    </div>
                    @Html.ValidationMessageFor(p => p.SupplierName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">

                    <div class="form-group row">

                        <label class="col-md-4 col-form-label">Brand Name</label> <div class="col-md-8">
                            @Html.DropDownListFor(p => p.BrandName, new SelectList(Model.lstBrandIdName), new { @class = "custom-select form-control" })

                        </div>
                    </div>
                    @Html.ValidationMessageFor(p => p.BrandName, "", new { @class = "text-danger" })
                </div>


                <div class="form-group">

                    <div class="form-group row">

                        <label class="col-md-4 col-form-label">Product Category</label> <div class="col-md-8">
                            @Html.DropDownListFor(p => p.ProductCategory, new SelectList(Model.lstProductCategory), new { @class = "custom-select form-control" })

                        </div>
                    </div>
                    @Html.ValidationMessageFor(p => p.ProductCategory, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">

                    <div class="form-group row">

                        <label class="col-md-4 col-form-label">Product Type</label>
                        <div class="col-md-8">
                            @Html.DropDownListFor(p => p.ProductType, new SelectList(new List<string>() { "--Select Option--","MobilePhone", "Tablet" }), new { @class = "custom-select form-control" })

                        </div>
                    </div>
                    @Html.ValidationMessageFor(p => p.ProductType, "", new { @class = "text-danger" })
                </div>
                @*@await Html.PartialAsync("PartialAccesory",Model)*@


                <div class="form-group">

                    <div class="form-group row">

                        <label class="col-md-4 col-form-label">ModelName</label>
                        <div class="col-md-8">
                            @Html.TextBoxFor(p => p.ModelName, "", new { @class = "form-control" })
                        </div>

                    </div>
                    @Html.ValidationMessageFor(p => p.warrenty, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">

                    <div class="form-group row">

                        <label class="col-md-4 col-form-label">Warrenty</label>
                        <div class="col-md-8">
                            @Html.TextBoxFor(p => p.warrenty, "", new { @class = "form-control" })
                        </div>

                    </div>
                    @Html.ValidationMessageFor(p => p.warrenty, "", new { @class = "text-danger" })
                </div>




                <div class="form-group">

                    <div class="form-group row">

                        <label class="col-md-4 col-form-label">Profit margin</label>


                        <div class="input-group col-md-8">

                            @Html.TextBoxFor(p => p.ProfitMargin, "", new { @class = "form-control " })

                        </div>


                    </div>
                    @Html.ValidationMessageFor(p => p.ProfitMargin, "", new { @class = "text-danger" })
                </div>



                <div class="form-group">

                    <div class="form-group row">

                        <label class="col-md-4 col-form-label">Cost</label>


                        <div class="input-group col-md-8">

                            @Html.TextBoxFor(p => p.Cost, "", new { @class = "form-control " })

                        </div>


                    </div>

                </div>







                <div class="form-group">


                    <div class="form-group row">

                        <label class="col-md-4 col-form-label">Details</label>
                        <div class="col-md-8">
                            @Html.TextAreaFor(p => p.Details, new { @class = "form-control " })
                        </div>

                    </div>
                    @Html.ValidationMessageFor(p => p.Details, "", new { @class = "text-danger" })
                </div>

                <div class="form-group row">
                    <div class="col"></div>
                    <button type="reset" class="btn btn-primary col-md-2 col-md-push-5 Button-Margin">Clear</button>
                    <button type="submit" class="btn btn-primary col-md-2 col-md-push-5 Button-Margin">Submit</button>
                    <div class="col-1"></div>
                </div>
            }

        </div>
    </div>
    <script>
                @{
                    var temp = TempData[SalesSystem.BLL.BOD.CommonValues.Success];
                    if (temp != null)
                    {
                       @Html.Raw("myfunction();");



                    }
                 }

                function myfunction() {
                    Swal.fire({
                        position: 'center',
                        icon: 'success',
                        title: 'User work has been saved',
                        showConfirmButton: false,
                        timer: 1500
                    })
                }
    </script>
</div>

